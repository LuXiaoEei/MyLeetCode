# 完美平方数


给定正整数 n，找到若干个完全平方数(比如 1, 4, 9, 16, ...) 使得他们的和等于 n。你需要让平方数的个数最少。

比如 n = 12，返回 3 ，因为 12 = 4 + 4 + 4 ； 给定 n = 13，返回 2 ，因为 13 = 4 + 9。

广度优先算法

```py
class Solution:
    def numSquares(self, n):
        if n < 2:
            return n
        lst = []
        i = 1
        while i * i <= n:
            lst.append( i * i )
            i += 1
        cnt = 0
        toCheck = {n}
        while toCheck:
            cnt += 1
            temp = set()
            for x in toCheck:
                for y in lst:
                    if x == y:
                        return cnt
                    if x > y:
                        temp.add(x-y)
            toCheck = temp

        return cnt
```
